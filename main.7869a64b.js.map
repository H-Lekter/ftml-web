{"version":3,"file":"main.7869a64b.js","sources":["../vite/modulepreload-polyfill","../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import css from './css/wikidot.css';\nimport sigma from './css/sigma-9.css';\nimport init from './css/init.css';\nimport ftmlWorker from './ftml.web.worker.js?bundled-worker&dataurl';\n\nlet ftml = new Worker(ftmlWorker, {\n  type: 'module',\n});\n\ndocument.querySelector(\"head > style#innercss\")!.innerHTML = css;\ndocument.querySelector(\"head > style#sigma\")!.innerHTML = sigma;\ndocument.querySelector(\"head > style#init\")!.innerHTML = init;\n\n// Workerスレッドから受信\nftml.onmessage = (event: MessageEvent) => {\n  const { html, styles, type } = event.data;\n  const pageStyles = document.getElementById('page-styles')!;\n  const pageContent = document.getElementById('page-content')!;\n  const sideContent = document.getElementById('side-bar')!;\n  if (type == 'page') {\n    pageContent.innerHTML = html;\n  } else if (type == 'side') {\n    sideContent.innerHTML = html;\n  } else if (type == 'top') {\n    sideContent.innerHTML = html;\n  } else {\n    pageContent.innerHTML = html;\n  }\n  if (styles.length > 0) {\n    pageStyles.innerHTML = styles.map((v: string) => `<style>\\n${v.replace(/\\\\</g, '&lt;')}\\n</style>`).join(\"\\n\\n\");\n  }\n};\n\nconst editpageField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-textarea')!;\nconst edittitleField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-title')!;\nconst editsideField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-side-textarea')!;\nconst editsaveButton = document.getElementById('edit-save-button')!;\n\neditpageField.addEventListener('input', (event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLTextAreaElement)) {\n    return;\n  }\n  const value = target.value;\n  const type = \"page\"\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n  ftml.postMessage({ value: value, type: type });\n});\n\neditsideField.addEventListener('input', (event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLTextAreaElement)) {\n    return;\n  }\n  const value = target.value;\n  const type = \"side\"\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n  ftml.postMessage({ value: value, type: type });\n});\n\nedittitleField.addEventListener('input', (event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLInputElement)) {\n    return;\n  }\n  const value = target.value;\n  document.querySelector(\"#page-title\")!.innerHTML = value;\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n});\n\neditsaveButton.addEventListener('click', async () => {\n  const opts = {\n    suggestedName: edittitleField.value ? edittitleField.value : 'underfined',\n    types: [{\n      description: 'Foundation Text Markup Language',\n      accept: { 'text/plain': ['.ftml'] },\n    }],\n  };\n  try {\n    const handle = await window.showSaveFilePicker(opts);\n    const writable = await handle.createWritable();\n    await writable.write(editpageField.value);\n    await writable.close();\n  } catch (err) {\n    console.log(err)\n  }\n})\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const FtmlStorageItem = localStorage.getItem(\"FtmlStorage\");\n  if (FtmlStorageItem) {\n    const FtmlStorage = JSON.parse(FtmlStorageItem);\n    edittitleField.value = FtmlStorage.title;\n    editpageField.value = FtmlStorage.page;\n    editsideField.value = FtmlStorage.side;\n    if (FtmlStorage.page) {\n      const type = \"page\"\n      ftml.postMessage({ value: FtmlStorage.page, type: type });\n    }\n    if (FtmlStorage.side) {\n      const type = \"side\"\n      ftml.postMessage({ value: FtmlStorage.side, type: type });\n    }\n    if (FtmlStorage.title) {\n      document.querySelector(\"#page-title\")!.innerHTML = FtmlStorage.title;\n    }\n  }\n  const FtmlStrageItem = localStorage.getItem(\"FtmlStrage\");\n  if (FtmlStrageItem) {\n    localStorage.removeItem(\"FtmlStrage\");\n  }\n});\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","ftml","Worker","querySelector","innerHTML","onmessage","event","html","styles","data","pageStyles","getElementById","pageContent","sideContent","length","map","v","replace","join","editpageField","edittitleField","editsideField","editsaveButton","addEventListener","target","HTMLTextAreaElement","value","FtmlStorageItem","title","page","side","localStorage","setItem","JSON","stringify","postMessage","HTMLInputElement","async","opts","suggestedName","types","description","accept","handle","window","showSaveFilePicker","writable","createWritable","write","close","err","console","log","getItem","FtmlStorage","parse","removeItem"],"mappings":"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"}